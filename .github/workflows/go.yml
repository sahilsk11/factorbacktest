# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  container-job:
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-latest
    # Docker Hub image that `container-job` executes in
    # container: python:3.9.12-alpine

    # Service containers to run with `container-job`
    # services:
    #   # Label used to access the service container
    #   postgres:
    #     # Docker Hub image
    #     image: postgres:14-alpine
    #     # Provide the password for postgres
    #     env:
    #       POSTGRES_DB: postgres_test
    #       POSTGRES_PASSWORD: postgres
    #     # Set health checks to wait until postgres has started
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5440:5432

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.20.0

    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r tools/requirements.txt

    - name: Set up Database
      run: python3 tools/migrations.py up postgres_test

    # - name: Build
    #   run: go build -v ./...

    - name: Build and run services with Docker Compose
      run: |
        lsof -i :3009
        docker-compose up -d app

    - name: Wait for app to be ready
      run: |
        echo "Waiting for app to be ready..."
        while ! curl -sSf http://localhost:3009/; do
          echo "Waiting for app..."
          sleep 5
        done
        echo "App is ready!"

    - name: Test
      run: go test -v ./...
