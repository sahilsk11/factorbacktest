//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type RebalancerRunType string

const (
	RebalancerRunType_ScheduledInvestmentRebalance RebalancerRunType = "SCHEDULED_INVESTMENT_REBALANCE"
	RebalancerRunType_ManualInvestmentRebalance    RebalancerRunType = "MANUAL_INVESTMENT_REBALANCE"
	RebalancerRunType_Deposit                      RebalancerRunType = "DEPOSIT"
	RebalancerRunType_Withdrawal                   RebalancerRunType = "WITHDRAWAL"
)

func (e *RebalancerRunType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "SCHEDULED_INVESTMENT_REBALANCE":
		*e = RebalancerRunType_ScheduledInvestmentRebalance
	case "MANUAL_INVESTMENT_REBALANCE":
		*e = RebalancerRunType_ManualInvestmentRebalance
	case "DEPOSIT":
		*e = RebalancerRunType_Deposit
	case "WITHDRAWAL":
		*e = RebalancerRunType_Withdrawal
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for RebalancerRunType enum")
	}

	return nil
}

func (e RebalancerRunType) String() string {
	return string(e)
}
