//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type TradeOrderStatus string

const (
	TradeOrderStatus_Pending   TradeOrderStatus = "PENDING"
	TradeOrderStatus_Completed TradeOrderStatus = "COMPLETED"
	TradeOrderStatus_Error     TradeOrderStatus = "ERROR"
	TradeOrderStatus_Canceled  TradeOrderStatus = "CANCELED"
)

func (e *TradeOrderStatus) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "PENDING":
		*e = TradeOrderStatus_Pending
	case "COMPLETED":
		*e = TradeOrderStatus_Completed
	case "ERROR":
		*e = TradeOrderStatus_Error
	case "CANCELED":
		*e = TradeOrderStatus_Canceled
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for TradeOrderStatus enum")
	}

	return nil
}

func (e TradeOrderStatus) String() string {
	return string(e)
}
