//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var AssetFundamental = newAssetFundamentalTable("public", "asset_fundamental", "")

type assetFundamentalTable struct {
	postgres.Table

	//Columns
	AfID                                postgres.ColumnString
	Symbol                              postgres.ColumnString
	StartDate                           postgres.ColumnDate
	EndDate                             postgres.ColumnDate
	CreatedAt                           postgres.ColumnTimestampz
	Revenue                             postgres.ColumnFloat
	CostOfRevenue                       postgres.ColumnFloat
	GrossProfit                         postgres.ColumnFloat
	OperatingIncome                     postgres.ColumnFloat
	TotalAssets                         postgres.ColumnFloat
	TotalCurrentAssets                  postgres.ColumnFloat
	PrepaidExpenses                     postgres.ColumnFloat
	PropertyPlantAndEquipmentNet        postgres.ColumnFloat
	RetainedEarnings                    postgres.ColumnFloat
	OtherAssetsNoncurrent               postgres.ColumnFloat
	TotalNonCurrentAssets               postgres.ColumnFloat
	TotalLiabilities                    postgres.ColumnFloat
	ShareholderEquity                   postgres.ColumnFloat
	NetIncome                           postgres.ColumnFloat
	SharesOutstandingDiluted            postgres.ColumnFloat
	SharesOutstandingBasic              postgres.ColumnFloat
	EpsDiluted                          postgres.ColumnFloat
	EpsBasic                            postgres.ColumnFloat
	OperatingCashFlow                   postgres.ColumnFloat
	InvestingCashFlow                   postgres.ColumnFloat
	FinancingCashFlow                   postgres.ColumnFloat
	NetCashFlow                         postgres.ColumnFloat
	ResearchDevelopmentExpense          postgres.ColumnFloat
	SellingGeneralAdministrativeExpense postgres.ColumnFloat
	OperatingExpenses                   postgres.ColumnFloat
	NonOperatingIncome                  postgres.ColumnFloat
	PreTaxIncome                        postgres.ColumnFloat
	IncomeTax                           postgres.ColumnFloat
	DepreciationAmortization            postgres.ColumnFloat
	StockBasedCompensation              postgres.ColumnFloat
	DividendsPaid                       postgres.ColumnFloat
	CashOnHand                          postgres.ColumnFloat
	CurrentNetReceivables               postgres.ColumnFloat
	Inventory                           postgres.ColumnFloat
	TotalCurrentLiabilities             postgres.ColumnFloat
	TotalNonCurrentLiabilities          postgres.ColumnFloat
	LongTermDebt                        postgres.ColumnFloat
	TotalLongTermLiabilities            postgres.ColumnFloat
	Goodwill                            postgres.ColumnFloat
	IntangibleAssetsExcludingGoodwill   postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AssetFundamentalTable struct {
	assetFundamentalTable

	EXCLUDED assetFundamentalTable
}

// AS creates new AssetFundamentalTable with assigned alias
func (a AssetFundamentalTable) AS(alias string) *AssetFundamentalTable {
	return newAssetFundamentalTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AssetFundamentalTable with assigned schema name
func (a AssetFundamentalTable) FromSchema(schemaName string) *AssetFundamentalTable {
	return newAssetFundamentalTable(schemaName, a.TableName(), a.Alias())
}

func newAssetFundamentalTable(schemaName, tableName, alias string) *AssetFundamentalTable {
	return &AssetFundamentalTable{
		assetFundamentalTable: newAssetFundamentalTableImpl(schemaName, tableName, alias),
		EXCLUDED:              newAssetFundamentalTableImpl("", "excluded", ""),
	}
}

func newAssetFundamentalTableImpl(schemaName, tableName, alias string) assetFundamentalTable {
	var (
		AfIDColumn                                = postgres.StringColumn("af_id")
		SymbolColumn                              = postgres.StringColumn("symbol")
		StartDateColumn                           = postgres.DateColumn("start_date")
		EndDateColumn                             = postgres.DateColumn("end_date")
		CreatedAtColumn                           = postgres.TimestampzColumn("created_at")
		RevenueColumn                             = postgres.FloatColumn("revenue")
		CostOfRevenueColumn                       = postgres.FloatColumn("cost_of_revenue")
		GrossProfitColumn                         = postgres.FloatColumn("gross_profit")
		OperatingIncomeColumn                     = postgres.FloatColumn("operating_income")
		TotalAssetsColumn                         = postgres.FloatColumn("total_assets")
		TotalCurrentAssetsColumn                  = postgres.FloatColumn("total_current_assets")
		PrepaidExpensesColumn                     = postgres.FloatColumn("prepaid_expenses")
		PropertyPlantAndEquipmentNetColumn        = postgres.FloatColumn("property_plant_and_equipment_net")
		RetainedEarningsColumn                    = postgres.FloatColumn("retained_earnings")
		OtherAssetsNoncurrentColumn               = postgres.FloatColumn("other_assets_noncurrent")
		TotalNonCurrentAssetsColumn               = postgres.FloatColumn("total_non_current_assets")
		TotalLiabilitiesColumn                    = postgres.FloatColumn("total_liabilities")
		ShareholderEquityColumn                   = postgres.FloatColumn("shareholder_equity")
		NetIncomeColumn                           = postgres.FloatColumn("net_income")
		SharesOutstandingDilutedColumn            = postgres.FloatColumn("shares_outstanding_diluted")
		SharesOutstandingBasicColumn              = postgres.FloatColumn("shares_outstanding_basic")
		EpsDilutedColumn                          = postgres.FloatColumn("eps_diluted")
		EpsBasicColumn                            = postgres.FloatColumn("eps_basic")
		OperatingCashFlowColumn                   = postgres.FloatColumn("operating_cash_flow")
		InvestingCashFlowColumn                   = postgres.FloatColumn("investing_cash_flow")
		FinancingCashFlowColumn                   = postgres.FloatColumn("financing_cash_flow")
		NetCashFlowColumn                         = postgres.FloatColumn("net_cash_flow")
		ResearchDevelopmentExpenseColumn          = postgres.FloatColumn("research_development_expense")
		SellingGeneralAdministrativeExpenseColumn = postgres.FloatColumn("selling_general_administrative_expense")
		OperatingExpensesColumn                   = postgres.FloatColumn("operating_expenses")
		NonOperatingIncomeColumn                  = postgres.FloatColumn("non_operating_income")
		PreTaxIncomeColumn                        = postgres.FloatColumn("pre_tax_income")
		IncomeTaxColumn                           = postgres.FloatColumn("income_tax")
		DepreciationAmortizationColumn            = postgres.FloatColumn("depreciation_amortization")
		StockBasedCompensationColumn              = postgres.FloatColumn("stock_based_compensation")
		DividendsPaidColumn                       = postgres.FloatColumn("dividends_paid")
		CashOnHandColumn                          = postgres.FloatColumn("cash_on_hand")
		CurrentNetReceivablesColumn               = postgres.FloatColumn("current_net_receivables")
		InventoryColumn                           = postgres.FloatColumn("inventory")
		TotalCurrentLiabilitiesColumn             = postgres.FloatColumn("total_current_liabilities")
		TotalNonCurrentLiabilitiesColumn          = postgres.FloatColumn("total_non_current_liabilities")
		LongTermDebtColumn                        = postgres.FloatColumn("long_term_debt")
		TotalLongTermLiabilitiesColumn            = postgres.FloatColumn("total_long_term_liabilities")
		GoodwillColumn                            = postgres.FloatColumn("goodwill")
		IntangibleAssetsExcludingGoodwillColumn   = postgres.FloatColumn("intangible_assets_excluding_goodwill")
		allColumns                                = postgres.ColumnList{AfIDColumn, SymbolColumn, StartDateColumn, EndDateColumn, CreatedAtColumn, RevenueColumn, CostOfRevenueColumn, GrossProfitColumn, OperatingIncomeColumn, TotalAssetsColumn, TotalCurrentAssetsColumn, PrepaidExpensesColumn, PropertyPlantAndEquipmentNetColumn, RetainedEarningsColumn, OtherAssetsNoncurrentColumn, TotalNonCurrentAssetsColumn, TotalLiabilitiesColumn, ShareholderEquityColumn, NetIncomeColumn, SharesOutstandingDilutedColumn, SharesOutstandingBasicColumn, EpsDilutedColumn, EpsBasicColumn, OperatingCashFlowColumn, InvestingCashFlowColumn, FinancingCashFlowColumn, NetCashFlowColumn, ResearchDevelopmentExpenseColumn, SellingGeneralAdministrativeExpenseColumn, OperatingExpensesColumn, NonOperatingIncomeColumn, PreTaxIncomeColumn, IncomeTaxColumn, DepreciationAmortizationColumn, StockBasedCompensationColumn, DividendsPaidColumn, CashOnHandColumn, CurrentNetReceivablesColumn, InventoryColumn, TotalCurrentLiabilitiesColumn, TotalNonCurrentLiabilitiesColumn, LongTermDebtColumn, TotalLongTermLiabilitiesColumn, GoodwillColumn, IntangibleAssetsExcludingGoodwillColumn}
		mutableColumns                            = postgres.ColumnList{SymbolColumn, StartDateColumn, EndDateColumn, CreatedAtColumn, RevenueColumn, CostOfRevenueColumn, GrossProfitColumn, OperatingIncomeColumn, TotalAssetsColumn, TotalCurrentAssetsColumn, PrepaidExpensesColumn, PropertyPlantAndEquipmentNetColumn, RetainedEarningsColumn, OtherAssetsNoncurrentColumn, TotalNonCurrentAssetsColumn, TotalLiabilitiesColumn, ShareholderEquityColumn, NetIncomeColumn, SharesOutstandingDilutedColumn, SharesOutstandingBasicColumn, EpsDilutedColumn, EpsBasicColumn, OperatingCashFlowColumn, InvestingCashFlowColumn, FinancingCashFlowColumn, NetCashFlowColumn, ResearchDevelopmentExpenseColumn, SellingGeneralAdministrativeExpenseColumn, OperatingExpensesColumn, NonOperatingIncomeColumn, PreTaxIncomeColumn, IncomeTaxColumn, DepreciationAmortizationColumn, StockBasedCompensationColumn, DividendsPaidColumn, CashOnHandColumn, CurrentNetReceivablesColumn, InventoryColumn, TotalCurrentLiabilitiesColumn, TotalNonCurrentLiabilitiesColumn, LongTermDebtColumn, TotalLongTermLiabilitiesColumn, GoodwillColumn, IntangibleAssetsExcludingGoodwillColumn}
	)

	return assetFundamentalTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AfID:                                AfIDColumn,
		Symbol:                              SymbolColumn,
		StartDate:                           StartDateColumn,
		EndDate:                             EndDateColumn,
		CreatedAt:                           CreatedAtColumn,
		Revenue:                             RevenueColumn,
		CostOfRevenue:                       CostOfRevenueColumn,
		GrossProfit:                         GrossProfitColumn,
		OperatingIncome:                     OperatingIncomeColumn,
		TotalAssets:                         TotalAssetsColumn,
		TotalCurrentAssets:                  TotalCurrentAssetsColumn,
		PrepaidExpenses:                     PrepaidExpensesColumn,
		PropertyPlantAndEquipmentNet:        PropertyPlantAndEquipmentNetColumn,
		RetainedEarnings:                    RetainedEarningsColumn,
		OtherAssetsNoncurrent:               OtherAssetsNoncurrentColumn,
		TotalNonCurrentAssets:               TotalNonCurrentAssetsColumn,
		TotalLiabilities:                    TotalLiabilitiesColumn,
		ShareholderEquity:                   ShareholderEquityColumn,
		NetIncome:                           NetIncomeColumn,
		SharesOutstandingDiluted:            SharesOutstandingDilutedColumn,
		SharesOutstandingBasic:              SharesOutstandingBasicColumn,
		EpsDiluted:                          EpsDilutedColumn,
		EpsBasic:                            EpsBasicColumn,
		OperatingCashFlow:                   OperatingCashFlowColumn,
		InvestingCashFlow:                   InvestingCashFlowColumn,
		FinancingCashFlow:                   FinancingCashFlowColumn,
		NetCashFlow:                         NetCashFlowColumn,
		ResearchDevelopmentExpense:          ResearchDevelopmentExpenseColumn,
		SellingGeneralAdministrativeExpense: SellingGeneralAdministrativeExpenseColumn,
		OperatingExpenses:                   OperatingExpensesColumn,
		NonOperatingIncome:                  NonOperatingIncomeColumn,
		PreTaxIncome:                        PreTaxIncomeColumn,
		IncomeTax:                           IncomeTaxColumn,
		DepreciationAmortization:            DepreciationAmortizationColumn,
		StockBasedCompensation:              StockBasedCompensationColumn,
		DividendsPaid:                       DividendsPaidColumn,
		CashOnHand:                          CashOnHandColumn,
		CurrentNetReceivables:               CurrentNetReceivablesColumn,
		Inventory:                           InventoryColumn,
		TotalCurrentLiabilities:             TotalCurrentLiabilitiesColumn,
		TotalNonCurrentLiabilities:          TotalNonCurrentLiabilitiesColumn,
		LongTermDebt:                        LongTermDebtColumn,
		TotalLongTermLiabilities:            TotalLongTermLiabilitiesColumn,
		Goodwill:                            GoodwillColumn,
		IntangibleAssetsExcludingGoodwill:   IntangibleAssetsExcludingGoodwillColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
