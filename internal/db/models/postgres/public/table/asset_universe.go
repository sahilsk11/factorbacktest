//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var AssetUniverse = newAssetUniverseTable("public", "asset_universe", "")

type assetUniverseTable struct {
	postgres.Table

	//Columns
	AssetUniverseID   postgres.ColumnString
	AssetUniverseName postgres.ColumnString
	DisplayName       postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type AssetUniverseTable struct {
	assetUniverseTable

	EXCLUDED assetUniverseTable
}

// AS creates new AssetUniverseTable with assigned alias
func (a AssetUniverseTable) AS(alias string) *AssetUniverseTable {
	return newAssetUniverseTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AssetUniverseTable with assigned schema name
func (a AssetUniverseTable) FromSchema(schemaName string) *AssetUniverseTable {
	return newAssetUniverseTable(schemaName, a.TableName(), a.Alias())
}

func newAssetUniverseTable(schemaName, tableName, alias string) *AssetUniverseTable {
	return &AssetUniverseTable{
		assetUniverseTable: newAssetUniverseTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newAssetUniverseTableImpl("", "excluded", ""),
	}
}

func newAssetUniverseTableImpl(schemaName, tableName, alias string) assetUniverseTable {
	var (
		AssetUniverseIDColumn   = postgres.StringColumn("asset_universe_id")
		AssetUniverseNameColumn = postgres.StringColumn("asset_universe_name")
		DisplayNameColumn       = postgres.StringColumn("display_name")
		allColumns              = postgres.ColumnList{AssetUniverseIDColumn, AssetUniverseNameColumn, DisplayNameColumn}
		mutableColumns          = postgres.ColumnList{AssetUniverseNameColumn, DisplayNameColumn}
	)

	return assetUniverseTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		AssetUniverseID:   AssetUniverseIDColumn,
		AssetUniverseName: AssetUniverseNameColumn,
		DisplayName:       DisplayNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
