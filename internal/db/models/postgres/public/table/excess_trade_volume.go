//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var ExcessTradeVolume = newExcessTradeVolumeTable("public", "excess_trade_volume", "")

type excessTradeVolumeTable struct {
	postgres.Table

	//Columns
	ExcessTradeVolumeID postgres.ColumnString
	TickerID            postgres.ColumnString
	Quantity            postgres.ColumnFloat
	CreatedAt           postgres.ColumnTimestampz
	RebalancerRunID     postgres.ColumnString
	TradeOrderID        postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type ExcessTradeVolumeTable struct {
	excessTradeVolumeTable

	EXCLUDED excessTradeVolumeTable
}

// AS creates new ExcessTradeVolumeTable with assigned alias
func (a ExcessTradeVolumeTable) AS(alias string) *ExcessTradeVolumeTable {
	return newExcessTradeVolumeTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExcessTradeVolumeTable with assigned schema name
func (a ExcessTradeVolumeTable) FromSchema(schemaName string) *ExcessTradeVolumeTable {
	return newExcessTradeVolumeTable(schemaName, a.TableName(), a.Alias())
}

func newExcessTradeVolumeTable(schemaName, tableName, alias string) *ExcessTradeVolumeTable {
	return &ExcessTradeVolumeTable{
		excessTradeVolumeTable: newExcessTradeVolumeTableImpl(schemaName, tableName, alias),
		EXCLUDED:               newExcessTradeVolumeTableImpl("", "excluded", ""),
	}
}

func newExcessTradeVolumeTableImpl(schemaName, tableName, alias string) excessTradeVolumeTable {
	var (
		ExcessTradeVolumeIDColumn = postgres.StringColumn("excess_trade_volume_id")
		TickerIDColumn            = postgres.StringColumn("ticker_id")
		QuantityColumn            = postgres.FloatColumn("quantity")
		CreatedAtColumn           = postgres.TimestampzColumn("created_at")
		RebalancerRunIDColumn     = postgres.StringColumn("rebalancer_run_id")
		TradeOrderIDColumn        = postgres.StringColumn("trade_order_id")
		allColumns                = postgres.ColumnList{ExcessTradeVolumeIDColumn, TickerIDColumn, QuantityColumn, CreatedAtColumn, RebalancerRunIDColumn, TradeOrderIDColumn}
		mutableColumns            = postgres.ColumnList{TickerIDColumn, QuantityColumn, CreatedAtColumn, RebalancerRunIDColumn, TradeOrderIDColumn}
	)

	return excessTradeVolumeTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ExcessTradeVolumeID: ExcessTradeVolumeIDColumn,
		TickerID:            TickerIDColumn,
		Quantity:            QuantityColumn,
		CreatedAt:           CreatedAtColumn,
		RebalancerRunID:     RebalancerRunIDColumn,
		TradeOrderID:        TradeOrderIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
