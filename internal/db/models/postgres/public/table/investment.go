//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Investment = newInvestmentTable("public", "investment", "")

type investmentTable struct {
	postgres.Table

	//Columns
	InvestmentID  postgres.ColumnString
	AmountDollars postgres.ColumnInteger
	StartDate     postgres.ColumnDate
	StrategyID    postgres.ColumnString
	UserAccountID postgres.ColumnString
	CreatedAt     postgres.ColumnTimestampz
	ModifiedAt    postgres.ColumnTimestampz
	EndDate       postgres.ColumnDate

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InvestmentTable struct {
	investmentTable

	EXCLUDED investmentTable
}

// AS creates new InvestmentTable with assigned alias
func (a InvestmentTable) AS(alias string) *InvestmentTable {
	return newInvestmentTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InvestmentTable with assigned schema name
func (a InvestmentTable) FromSchema(schemaName string) *InvestmentTable {
	return newInvestmentTable(schemaName, a.TableName(), a.Alias())
}

func newInvestmentTable(schemaName, tableName, alias string) *InvestmentTable {
	return &InvestmentTable{
		investmentTable: newInvestmentTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newInvestmentTableImpl("", "excluded", ""),
	}
}

func newInvestmentTableImpl(schemaName, tableName, alias string) investmentTable {
	var (
		InvestmentIDColumn  = postgres.StringColumn("investment_id")
		AmountDollarsColumn = postgres.IntegerColumn("amount_dollars")
		StartDateColumn     = postgres.DateColumn("start_date")
		StrategyIDColumn    = postgres.StringColumn("strategy_id")
		UserAccountIDColumn = postgres.StringColumn("user_account_id")
		CreatedAtColumn     = postgres.TimestampzColumn("created_at")
		ModifiedAtColumn    = postgres.TimestampzColumn("modified_at")
		EndDateColumn       = postgres.DateColumn("end_date")
		allColumns          = postgres.ColumnList{InvestmentIDColumn, AmountDollarsColumn, StartDateColumn, StrategyIDColumn, UserAccountIDColumn, CreatedAtColumn, ModifiedAtColumn, EndDateColumn}
		mutableColumns      = postgres.ColumnList{AmountDollarsColumn, StartDateColumn, StrategyIDColumn, UserAccountIDColumn, CreatedAtColumn, ModifiedAtColumn, EndDateColumn}
	)

	return investmentTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InvestmentID:  InvestmentIDColumn,
		AmountDollars: AmountDollarsColumn,
		StartDate:     StartDateColumn,
		StrategyID:    StrategyIDColumn,
		UserAccountID: UserAccountIDColumn,
		CreatedAt:     CreatedAtColumn,
		ModifiedAt:    ModifiedAtColumn,
		EndDate:       EndDateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
