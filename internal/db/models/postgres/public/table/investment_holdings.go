//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var InvestmentHoldings = newInvestmentHoldingsTable("public", "investment_holdings", "")

type investmentHoldingsTable struct {
	postgres.Table

	//Columns
	InvestmentHoldingsID        postgres.ColumnString
	DelInvestmentID             postgres.ColumnString
	TickerID                    postgres.ColumnString
	Quantity                    postgres.ColumnFloat
	CreatedAt                   postgres.ColumnTimestampz
	InvestmentHoldingsVersionID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InvestmentHoldingsTable struct {
	investmentHoldingsTable

	EXCLUDED investmentHoldingsTable
}

// AS creates new InvestmentHoldingsTable with assigned alias
func (a InvestmentHoldingsTable) AS(alias string) *InvestmentHoldingsTable {
	return newInvestmentHoldingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InvestmentHoldingsTable with assigned schema name
func (a InvestmentHoldingsTable) FromSchema(schemaName string) *InvestmentHoldingsTable {
	return newInvestmentHoldingsTable(schemaName, a.TableName(), a.Alias())
}

func newInvestmentHoldingsTable(schemaName, tableName, alias string) *InvestmentHoldingsTable {
	return &InvestmentHoldingsTable{
		investmentHoldingsTable: newInvestmentHoldingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newInvestmentHoldingsTableImpl("", "excluded", ""),
	}
}

func newInvestmentHoldingsTableImpl(schemaName, tableName, alias string) investmentHoldingsTable {
	var (
		InvestmentHoldingsIDColumn        = postgres.StringColumn("investment_holdings_id")
		DelInvestmentIDColumn             = postgres.StringColumn("del_investment_id")
		TickerIDColumn                    = postgres.StringColumn("ticker_id")
		QuantityColumn                    = postgres.FloatColumn("quantity")
		CreatedAtColumn                   = postgres.TimestampzColumn("created_at")
		InvestmentHoldingsVersionIDColumn = postgres.StringColumn("investment_holdings_version_id")
		allColumns                        = postgres.ColumnList{InvestmentHoldingsIDColumn, DelInvestmentIDColumn, TickerIDColumn, QuantityColumn, CreatedAtColumn, InvestmentHoldingsVersionIDColumn}
		mutableColumns                    = postgres.ColumnList{DelInvestmentIDColumn, TickerIDColumn, QuantityColumn, CreatedAtColumn, InvestmentHoldingsVersionIDColumn}
	)

	return investmentHoldingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InvestmentHoldingsID:        InvestmentHoldingsIDColumn,
		DelInvestmentID:             DelInvestmentIDColumn,
		TickerID:                    TickerIDColumn,
		Quantity:                    QuantityColumn,
		CreatedAt:                   CreatedAtColumn,
		InvestmentHoldingsVersionID: InvestmentHoldingsVersionIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
