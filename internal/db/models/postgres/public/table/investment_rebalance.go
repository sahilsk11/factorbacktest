//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var InvestmentRebalance = newInvestmentRebalanceTable("public", "investment_rebalance", "")

type investmentRebalanceTable struct {
	postgres.Table

	//Columns
	InvestmentRebalanceID     postgres.ColumnString
	RebalancerRunID           postgres.ColumnString
	InvestmentID              postgres.ColumnString
	State                     postgres.ColumnString
	CreatedAt                 postgres.ColumnTimestampz
	ModifiedAt                postgres.ColumnTimestampz
	StartingHoldingsVersionID postgres.ColumnString
	StartingPortfolio         postgres.ColumnString
	TargetPortfolio           postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InvestmentRebalanceTable struct {
	investmentRebalanceTable

	EXCLUDED investmentRebalanceTable
}

// AS creates new InvestmentRebalanceTable with assigned alias
func (a InvestmentRebalanceTable) AS(alias string) *InvestmentRebalanceTable {
	return newInvestmentRebalanceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InvestmentRebalanceTable with assigned schema name
func (a InvestmentRebalanceTable) FromSchema(schemaName string) *InvestmentRebalanceTable {
	return newInvestmentRebalanceTable(schemaName, a.TableName(), a.Alias())
}

func newInvestmentRebalanceTable(schemaName, tableName, alias string) *InvestmentRebalanceTable {
	return &InvestmentRebalanceTable{
		investmentRebalanceTable: newInvestmentRebalanceTableImpl(schemaName, tableName, alias),
		EXCLUDED:                 newInvestmentRebalanceTableImpl("", "excluded", ""),
	}
}

func newInvestmentRebalanceTableImpl(schemaName, tableName, alias string) investmentRebalanceTable {
	var (
		InvestmentRebalanceIDColumn     = postgres.StringColumn("investment_rebalance_id")
		RebalancerRunIDColumn           = postgres.StringColumn("rebalancer_run_id")
		InvestmentIDColumn              = postgres.StringColumn("investment_id")
		StateColumn                     = postgres.StringColumn("state")
		CreatedAtColumn                 = postgres.TimestampzColumn("created_at")
		ModifiedAtColumn                = postgres.TimestampzColumn("modified_at")
		StartingHoldingsVersionIDColumn = postgres.StringColumn("starting_holdings_version_id")
		StartingPortfolioColumn         = postgres.StringColumn("starting_portfolio")
		TargetPortfolioColumn           = postgres.StringColumn("target_portfolio")
		allColumns                      = postgres.ColumnList{InvestmentRebalanceIDColumn, RebalancerRunIDColumn, InvestmentIDColumn, StateColumn, CreatedAtColumn, ModifiedAtColumn, StartingHoldingsVersionIDColumn, StartingPortfolioColumn, TargetPortfolioColumn}
		mutableColumns                  = postgres.ColumnList{RebalancerRunIDColumn, InvestmentIDColumn, StateColumn, CreatedAtColumn, ModifiedAtColumn, StartingHoldingsVersionIDColumn, StartingPortfolioColumn, TargetPortfolioColumn}
	)

	return investmentRebalanceTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InvestmentRebalanceID:     InvestmentRebalanceIDColumn,
		RebalancerRunID:           RebalancerRunIDColumn,
		InvestmentID:              InvestmentIDColumn,
		State:                     StateColumn,
		CreatedAt:                 CreatedAtColumn,
		ModifiedAt:                ModifiedAtColumn,
		StartingHoldingsVersionID: StartingHoldingsVersionIDColumn,
		StartingPortfolio:         StartingPortfolioColumn,
		TargetPortfolio:           TargetPortfolioColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
