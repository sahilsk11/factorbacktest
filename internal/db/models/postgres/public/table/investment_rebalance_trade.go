//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var InvestmentRebalanceTrade = newInvestmentRebalanceTradeTable("public", "investment_rebalance_trade", "")

type investmentRebalanceTradeTable struct {
	postgres.Table

	//Columns
	InvestmentRebalanceTradeID postgres.ColumnString
	InvestmentRebalanceID      postgres.ColumnString
	TickerID                   postgres.ColumnString
	AmountInDollars            postgres.ColumnFloat
	Side                       postgres.ColumnString
	CreatedAt                  postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type InvestmentRebalanceTradeTable struct {
	investmentRebalanceTradeTable

	EXCLUDED investmentRebalanceTradeTable
}

// AS creates new InvestmentRebalanceTradeTable with assigned alias
func (a InvestmentRebalanceTradeTable) AS(alias string) *InvestmentRebalanceTradeTable {
	return newInvestmentRebalanceTradeTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new InvestmentRebalanceTradeTable with assigned schema name
func (a InvestmentRebalanceTradeTable) FromSchema(schemaName string) *InvestmentRebalanceTradeTable {
	return newInvestmentRebalanceTradeTable(schemaName, a.TableName(), a.Alias())
}

func newInvestmentRebalanceTradeTable(schemaName, tableName, alias string) *InvestmentRebalanceTradeTable {
	return &InvestmentRebalanceTradeTable{
		investmentRebalanceTradeTable: newInvestmentRebalanceTradeTableImpl(schemaName, tableName, alias),
		EXCLUDED:                      newInvestmentRebalanceTradeTableImpl("", "excluded", ""),
	}
}

func newInvestmentRebalanceTradeTableImpl(schemaName, tableName, alias string) investmentRebalanceTradeTable {
	var (
		InvestmentRebalanceTradeIDColumn = postgres.StringColumn("investment_rebalance_trade_id")
		InvestmentRebalanceIDColumn      = postgres.StringColumn("investment_rebalance_id")
		TickerIDColumn                   = postgres.StringColumn("ticker_id")
		AmountInDollarsColumn            = postgres.FloatColumn("amount_in_dollars")
		SideColumn                       = postgres.StringColumn("side")
		CreatedAtColumn                  = postgres.TimestampzColumn("created_at")
		allColumns                       = postgres.ColumnList{InvestmentRebalanceTradeIDColumn, InvestmentRebalanceIDColumn, TickerIDColumn, AmountInDollarsColumn, SideColumn, CreatedAtColumn}
		mutableColumns                   = postgres.ColumnList{InvestmentRebalanceIDColumn, TickerIDColumn, AmountInDollarsColumn, SideColumn, CreatedAtColumn}
	)

	return investmentRebalanceTradeTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InvestmentRebalanceTradeID: InvestmentRebalanceTradeIDColumn,
		InvestmentRebalanceID:      InvestmentRebalanceIDColumn,
		TickerID:                   TickerIDColumn,
		AmountInDollars:            AmountInDollarsColumn,
		Side:                       SideColumn,
		CreatedAt:                  CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
