//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PublishedStrategyHoldings = newPublishedStrategyHoldingsTable("public", "published_strategy_holdings", "")

type publishedStrategyHoldingsTable struct {
	postgres.Table

	//Columns
	PublishedStrategyHoldingsID        postgres.ColumnString
	PublishedStrategyID                postgres.ColumnString
	CreatedAt                          postgres.ColumnTimestampz
	TickerID                           postgres.ColumnString
	Quantity                           postgres.ColumnFloat
	PublishedStrategyHoldingsVersionID postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PublishedStrategyHoldingsTable struct {
	publishedStrategyHoldingsTable

	EXCLUDED publishedStrategyHoldingsTable
}

// AS creates new PublishedStrategyHoldingsTable with assigned alias
func (a PublishedStrategyHoldingsTable) AS(alias string) *PublishedStrategyHoldingsTable {
	return newPublishedStrategyHoldingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PublishedStrategyHoldingsTable with assigned schema name
func (a PublishedStrategyHoldingsTable) FromSchema(schemaName string) *PublishedStrategyHoldingsTable {
	return newPublishedStrategyHoldingsTable(schemaName, a.TableName(), a.Alias())
}

func newPublishedStrategyHoldingsTable(schemaName, tableName, alias string) *PublishedStrategyHoldingsTable {
	return &PublishedStrategyHoldingsTable{
		publishedStrategyHoldingsTable: newPublishedStrategyHoldingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                       newPublishedStrategyHoldingsTableImpl("", "excluded", ""),
	}
}

func newPublishedStrategyHoldingsTableImpl(schemaName, tableName, alias string) publishedStrategyHoldingsTable {
	var (
		PublishedStrategyHoldingsIDColumn        = postgres.StringColumn("published_strategy_holdings_id")
		PublishedStrategyIDColumn                = postgres.StringColumn("published_strategy_id")
		CreatedAtColumn                          = postgres.TimestampzColumn("created_at")
		TickerIDColumn                           = postgres.StringColumn("ticker_id")
		QuantityColumn                           = postgres.FloatColumn("quantity")
		PublishedStrategyHoldingsVersionIDColumn = postgres.StringColumn("published_strategy_holdings_version_id")
		allColumns                               = postgres.ColumnList{PublishedStrategyHoldingsIDColumn, PublishedStrategyIDColumn, CreatedAtColumn, TickerIDColumn, QuantityColumn, PublishedStrategyHoldingsVersionIDColumn}
		mutableColumns                           = postgres.ColumnList{PublishedStrategyIDColumn, CreatedAtColumn, TickerIDColumn, QuantityColumn, PublishedStrategyHoldingsVersionIDColumn}
	)

	return publishedStrategyHoldingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PublishedStrategyHoldingsID:        PublishedStrategyHoldingsIDColumn,
		PublishedStrategyID:                PublishedStrategyIDColumn,
		CreatedAt:                          CreatedAtColumn,
		TickerID:                           TickerIDColumn,
		Quantity:                           QuantityColumn,
		PublishedStrategyHoldingsVersionID: PublishedStrategyHoldingsVersionIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
