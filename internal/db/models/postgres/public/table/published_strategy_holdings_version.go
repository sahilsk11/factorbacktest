//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var PublishedStrategyHoldingsVersion = newPublishedStrategyHoldingsVersionTable("public", "published_strategy_holdings_version", "")

type publishedStrategyHoldingsVersionTable struct {
	postgres.Table

	//Columns
	PublishedStrategyHoldingsVersionID postgres.ColumnString
	VersionID                          postgres.ColumnString
	CreatedAt                          postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type PublishedStrategyHoldingsVersionTable struct {
	publishedStrategyHoldingsVersionTable

	EXCLUDED publishedStrategyHoldingsVersionTable
}

// AS creates new PublishedStrategyHoldingsVersionTable with assigned alias
func (a PublishedStrategyHoldingsVersionTable) AS(alias string) *PublishedStrategyHoldingsVersionTable {
	return newPublishedStrategyHoldingsVersionTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new PublishedStrategyHoldingsVersionTable with assigned schema name
func (a PublishedStrategyHoldingsVersionTable) FromSchema(schemaName string) *PublishedStrategyHoldingsVersionTable {
	return newPublishedStrategyHoldingsVersionTable(schemaName, a.TableName(), a.Alias())
}

func newPublishedStrategyHoldingsVersionTable(schemaName, tableName, alias string) *PublishedStrategyHoldingsVersionTable {
	return &PublishedStrategyHoldingsVersionTable{
		publishedStrategyHoldingsVersionTable: newPublishedStrategyHoldingsVersionTableImpl(schemaName, tableName, alias),
		EXCLUDED:                              newPublishedStrategyHoldingsVersionTableImpl("", "excluded", ""),
	}
}

func newPublishedStrategyHoldingsVersionTableImpl(schemaName, tableName, alias string) publishedStrategyHoldingsVersionTable {
	var (
		PublishedStrategyHoldingsVersionIDColumn = postgres.StringColumn("published_strategy_holdings_version_id")
		VersionIDColumn                          = postgres.StringColumn("version_id")
		CreatedAtColumn                          = postgres.TimestampzColumn("created_at")
		allColumns                               = postgres.ColumnList{PublishedStrategyHoldingsVersionIDColumn, VersionIDColumn, CreatedAtColumn}
		mutableColumns                           = postgres.ColumnList{VersionIDColumn, CreatedAtColumn}
	)

	return publishedStrategyHoldingsVersionTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		PublishedStrategyHoldingsVersionID: PublishedStrategyHoldingsVersionIDColumn,
		VersionID:                          VersionIDColumn,
		CreatedAt:                          CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
