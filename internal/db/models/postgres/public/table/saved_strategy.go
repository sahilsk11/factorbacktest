//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SavedStrategy = newSavedStrategyTable("public", "saved_strategy", "")

type savedStrategyTable struct {
	postgres.Table

	//Columns
	SavedStrategyID postgres.ColumnString
	UserAccountID   postgres.ColumnString
	StrategyID      postgres.ColumnString
	CreatedAt       postgres.ColumnTimestampz
	ModifiedAt      postgres.ColumnTimestampz
	DeletedAt       postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SavedStrategyTable struct {
	savedStrategyTable

	EXCLUDED savedStrategyTable
}

// AS creates new SavedStrategyTable with assigned alias
func (a SavedStrategyTable) AS(alias string) *SavedStrategyTable {
	return newSavedStrategyTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SavedStrategyTable with assigned schema name
func (a SavedStrategyTable) FromSchema(schemaName string) *SavedStrategyTable {
	return newSavedStrategyTable(schemaName, a.TableName(), a.Alias())
}

func newSavedStrategyTable(schemaName, tableName, alias string) *SavedStrategyTable {
	return &SavedStrategyTable{
		savedStrategyTable: newSavedStrategyTableImpl(schemaName, tableName, alias),
		EXCLUDED:           newSavedStrategyTableImpl("", "excluded", ""),
	}
}

func newSavedStrategyTableImpl(schemaName, tableName, alias string) savedStrategyTable {
	var (
		SavedStrategyIDColumn = postgres.StringColumn("saved_strategy_id")
		UserAccountIDColumn   = postgres.StringColumn("user_account_id")
		StrategyIDColumn      = postgres.StringColumn("strategy_id")
		CreatedAtColumn       = postgres.TimestampzColumn("created_at")
		ModifiedAtColumn      = postgres.TimestampzColumn("modified_at")
		DeletedAtColumn       = postgres.TimestampzColumn("deleted_at")
		allColumns            = postgres.ColumnList{SavedStrategyIDColumn, UserAccountIDColumn, StrategyIDColumn, CreatedAtColumn, ModifiedAtColumn, DeletedAtColumn}
		mutableColumns        = postgres.ColumnList{UserAccountIDColumn, StrategyIDColumn, CreatedAtColumn, ModifiedAtColumn, DeletedAtColumn}
	)

	return savedStrategyTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		SavedStrategyID: SavedStrategyIDColumn,
		UserAccountID:   UserAccountIDColumn,
		StrategyID:      StrategyIDColumn,
		CreatedAt:       CreatedAtColumn,
		ModifiedAt:      ModifiedAtColumn,
		DeletedAt:       DeletedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
