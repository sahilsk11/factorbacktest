//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var StrategyInvestmentHoldings = newStrategyInvestmentHoldingsTable("public", "strategy_investment_holdings", "")

type strategyInvestmentHoldingsTable struct {
	postgres.Table

	//Columns
	StrategyInvestmentHoldingsID postgres.ColumnString
	StrategyInvestmentID         postgres.ColumnString
	Date                         postgres.ColumnDate
	Ticker                       postgres.ColumnString
	Quantity                     postgres.ColumnFloat

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type StrategyInvestmentHoldingsTable struct {
	strategyInvestmentHoldingsTable

	EXCLUDED strategyInvestmentHoldingsTable
}

// AS creates new StrategyInvestmentHoldingsTable with assigned alias
func (a StrategyInvestmentHoldingsTable) AS(alias string) *StrategyInvestmentHoldingsTable {
	return newStrategyInvestmentHoldingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StrategyInvestmentHoldingsTable with assigned schema name
func (a StrategyInvestmentHoldingsTable) FromSchema(schemaName string) *StrategyInvestmentHoldingsTable {
	return newStrategyInvestmentHoldingsTable(schemaName, a.TableName(), a.Alias())
}

func newStrategyInvestmentHoldingsTable(schemaName, tableName, alias string) *StrategyInvestmentHoldingsTable {
	return &StrategyInvestmentHoldingsTable{
		strategyInvestmentHoldingsTable: newStrategyInvestmentHoldingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                        newStrategyInvestmentHoldingsTableImpl("", "excluded", ""),
	}
}

func newStrategyInvestmentHoldingsTableImpl(schemaName, tableName, alias string) strategyInvestmentHoldingsTable {
	var (
		StrategyInvestmentHoldingsIDColumn = postgres.StringColumn("strategy_investment_holdings_id")
		StrategyInvestmentIDColumn         = postgres.StringColumn("strategy_investment_id")
		DateColumn                         = postgres.DateColumn("date")
		TickerColumn                       = postgres.StringColumn("ticker")
		QuantityColumn                     = postgres.FloatColumn("quantity")
		allColumns                         = postgres.ColumnList{StrategyInvestmentHoldingsIDColumn, StrategyInvestmentIDColumn, DateColumn, TickerColumn, QuantityColumn}
		mutableColumns                     = postgres.ColumnList{StrategyInvestmentIDColumn, DateColumn, TickerColumn, QuantityColumn}
	)

	return strategyInvestmentHoldingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		StrategyInvestmentHoldingsID: StrategyInvestmentHoldingsIDColumn,
		StrategyInvestmentID:         StrategyInvestmentIDColumn,
		Date:                         DateColumn,
		Ticker:                       TickerColumn,
		Quantity:                     QuantityColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
