//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var StrategyRun = newStrategyRunTable("public", "strategy_run", "")

type strategyRunTable struct {
	postgres.Table

	//Columns
	StrategyRunID    postgres.ColumnString
	StrategyID       postgres.ColumnString
	StartDate        postgres.ColumnDate
	EndDate          postgres.ColumnDate
	SharpeRatio      postgres.ColumnFloat
	AnnualizedReturn postgres.ColumnFloat
	AnnualuzedStdev  postgres.ColumnFloat
	CreatedAt        postgres.ColumnTimestampz

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type StrategyRunTable struct {
	strategyRunTable

	EXCLUDED strategyRunTable
}

// AS creates new StrategyRunTable with assigned alias
func (a StrategyRunTable) AS(alias string) *StrategyRunTable {
	return newStrategyRunTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new StrategyRunTable with assigned schema name
func (a StrategyRunTable) FromSchema(schemaName string) *StrategyRunTable {
	return newStrategyRunTable(schemaName, a.TableName(), a.Alias())
}

func newStrategyRunTable(schemaName, tableName, alias string) *StrategyRunTable {
	return &StrategyRunTable{
		strategyRunTable: newStrategyRunTableImpl(schemaName, tableName, alias),
		EXCLUDED:         newStrategyRunTableImpl("", "excluded", ""),
	}
}

func newStrategyRunTableImpl(schemaName, tableName, alias string) strategyRunTable {
	var (
		StrategyRunIDColumn    = postgres.StringColumn("strategy_run_id")
		StrategyIDColumn       = postgres.StringColumn("strategy_id")
		StartDateColumn        = postgres.DateColumn("start_date")
		EndDateColumn          = postgres.DateColumn("end_date")
		SharpeRatioColumn      = postgres.FloatColumn("sharpe_ratio")
		AnnualizedReturnColumn = postgres.FloatColumn("annualized_return")
		AnnualuzedStdevColumn  = postgres.FloatColumn("annualuzed_stdev")
		CreatedAtColumn        = postgres.TimestampzColumn("created_at")
		allColumns             = postgres.ColumnList{StrategyRunIDColumn, StrategyIDColumn, StartDateColumn, EndDateColumn, SharpeRatioColumn, AnnualizedReturnColumn, AnnualuzedStdevColumn, CreatedAtColumn}
		mutableColumns         = postgres.ColumnList{StrategyIDColumn, StartDateColumn, EndDateColumn, SharpeRatioColumn, AnnualizedReturnColumn, AnnualuzedStdevColumn, CreatedAtColumn}
	)

	return strategyRunTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		StrategyRunID:    StrategyRunIDColumn,
		StrategyID:       StrategyIDColumn,
		StartDate:        StartDateColumn,
		EndDate:          EndDateColumn,
		SharpeRatio:      SharpeRatioColumn,
		AnnualizedReturn: AnnualizedReturnColumn,
		AnnualuzedStdev:  AnnualuzedStdevColumn,
		CreatedAt:        CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
