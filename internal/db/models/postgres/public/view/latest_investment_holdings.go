//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LatestInvestmentHoldings = newLatestInvestmentHoldingsTable("public", "latest_investment_holdings", "")

type latestInvestmentHoldingsTable struct {
	postgres.Table

	//Columns
	InvestmentHoldingsID postgres.ColumnString
	InvestmentID         postgres.ColumnString
	Ticker               postgres.ColumnString
	Quantity             postgres.ColumnFloat
	CreatedAt            postgres.ColumnTimestampz
	RebalancerRunID      postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LatestInvestmentHoldingsTable struct {
	latestInvestmentHoldingsTable

	EXCLUDED latestInvestmentHoldingsTable
}

// AS creates new LatestInvestmentHoldingsTable with assigned alias
func (a LatestInvestmentHoldingsTable) AS(alias string) *LatestInvestmentHoldingsTable {
	return newLatestInvestmentHoldingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LatestInvestmentHoldingsTable with assigned schema name
func (a LatestInvestmentHoldingsTable) FromSchema(schemaName string) *LatestInvestmentHoldingsTable {
	return newLatestInvestmentHoldingsTable(schemaName, a.TableName(), a.Alias())
}

func newLatestInvestmentHoldingsTable(schemaName, tableName, alias string) *LatestInvestmentHoldingsTable {
	return &LatestInvestmentHoldingsTable{
		latestInvestmentHoldingsTable: newLatestInvestmentHoldingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                      newLatestInvestmentHoldingsTableImpl("", "excluded", ""),
	}
}

func newLatestInvestmentHoldingsTableImpl(schemaName, tableName, alias string) latestInvestmentHoldingsTable {
	var (
		InvestmentHoldingsIDColumn = postgres.StringColumn("investment_holdings_id")
		InvestmentIDColumn         = postgres.StringColumn("investment_id")
		TickerColumn               = postgres.StringColumn("ticker")
		QuantityColumn             = postgres.FloatColumn("quantity")
		CreatedAtColumn            = postgres.TimestampzColumn("created_at")
		RebalancerRunIDColumn      = postgres.StringColumn("rebalancer_run_id")
		allColumns                 = postgres.ColumnList{InvestmentHoldingsIDColumn, InvestmentIDColumn, TickerColumn, QuantityColumn, CreatedAtColumn, RebalancerRunIDColumn}
		mutableColumns             = postgres.ColumnList{InvestmentHoldingsIDColumn, InvestmentIDColumn, TickerColumn, QuantityColumn, CreatedAtColumn, RebalancerRunIDColumn}
	)

	return latestInvestmentHoldingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		InvestmentHoldingsID: InvestmentHoldingsIDColumn,
		InvestmentID:         InvestmentIDColumn,
		Ticker:               TickerColumn,
		Quantity:             QuantityColumn,
		CreatedAt:            CreatedAtColumn,
		RebalancerRunID:      RebalancerRunIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
