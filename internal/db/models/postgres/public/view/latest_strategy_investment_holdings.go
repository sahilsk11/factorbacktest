//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package view

import (
	"github.com/go-jet/jet/v2/postgres"
)

var LatestStrategyInvestmentHoldings = newLatestStrategyInvestmentHoldingsTable("public", "latest_strategy_investment_holdings", "")

type latestStrategyInvestmentHoldingsTable struct {
	postgres.Table

	//Columns
	StrategyInvestmentHoldingsID postgres.ColumnString
	StrategyInvestmentID         postgres.ColumnString
	Date                         postgres.ColumnDate
	Ticker                       postgres.ColumnString
	Quantity                     postgres.ColumnFloat
	Symbol                       postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type LatestStrategyInvestmentHoldingsTable struct {
	latestStrategyInvestmentHoldingsTable

	EXCLUDED latestStrategyInvestmentHoldingsTable
}

// AS creates new LatestStrategyInvestmentHoldingsTable with assigned alias
func (a LatestStrategyInvestmentHoldingsTable) AS(alias string) *LatestStrategyInvestmentHoldingsTable {
	return newLatestStrategyInvestmentHoldingsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LatestStrategyInvestmentHoldingsTable with assigned schema name
func (a LatestStrategyInvestmentHoldingsTable) FromSchema(schemaName string) *LatestStrategyInvestmentHoldingsTable {
	return newLatestStrategyInvestmentHoldingsTable(schemaName, a.TableName(), a.Alias())
}

func newLatestStrategyInvestmentHoldingsTable(schemaName, tableName, alias string) *LatestStrategyInvestmentHoldingsTable {
	return &LatestStrategyInvestmentHoldingsTable{
		latestStrategyInvestmentHoldingsTable: newLatestStrategyInvestmentHoldingsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                              newLatestStrategyInvestmentHoldingsTableImpl("", "excluded", ""),
	}
}

func newLatestStrategyInvestmentHoldingsTableImpl(schemaName, tableName, alias string) latestStrategyInvestmentHoldingsTable {
	var (
		StrategyInvestmentHoldingsIDColumn = postgres.StringColumn("strategy_investment_holdings_id")
		StrategyInvestmentIDColumn         = postgres.StringColumn("strategy_investment_id")
		DateColumn                         = postgres.DateColumn("date")
		TickerColumn                       = postgres.StringColumn("ticker")
		QuantityColumn                     = postgres.FloatColumn("quantity")
		SymbolColumn                       = postgres.StringColumn("symbol")
		allColumns                         = postgres.ColumnList{StrategyInvestmentHoldingsIDColumn, StrategyInvestmentIDColumn, DateColumn, TickerColumn, QuantityColumn, SymbolColumn}
		mutableColumns                     = postgres.ColumnList{StrategyInvestmentHoldingsIDColumn, StrategyInvestmentIDColumn, DateColumn, TickerColumn, QuantityColumn, SymbolColumn}
	)

	return latestStrategyInvestmentHoldingsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		StrategyInvestmentHoldingsID: StrategyInvestmentHoldingsIDColumn,
		StrategyInvestmentID:         StrategyInvestmentIDColumn,
		Date:                         DateColumn,
		Ticker:                       TickerColumn,
		Quantity:                     QuantityColumn,
		Symbol:                       SymbolColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
